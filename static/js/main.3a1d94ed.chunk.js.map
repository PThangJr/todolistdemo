{"version":3,"sources":["Components/EditTask.js","Components/OptionsTask.js","Components/ListItem.js","Components/TableData.js","Components/Constants.js","App.js","serviceWorker.js","index.js"],"names":["EditTask","props","checkDisplayEditTask","statusEditTask","fieldName","fieldStatus","statusUpdateTask","onHandleChange","onAdd","onUpdate","onReset","hideEditTask","className","onClick","type","name","value","onChange","e","aria-label","checked","state","this","Component","OptionsTask","displayEditTask","showEditTask","placeholder","ListItem","listItem","stt","onDelete","onChangeStatus","showUpdateTask","status","id","TableData","updateDataBase","database","setState","filterItem","target","renderListItem","map","item","index","key","sort","sortName","sortStatus","onHandleSort","style","display","linkAPI","App","generateId","Math","random","toString","substr","preventDefault","data","trim","valueInput","options","method","headers","body","JSON","stringify","fetch","then","response","json","result","push","catch","error","alert","valueAdd","newUpdateData","console","log","dataFilter","filter","changeStatus","filterValue","parseInt","nameSort","statusSort","dataInit","sortBy","sttSort","toUpperCase","indexOf","a","b","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.3a1d94ed.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass EditTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fieldName: '',\r\n      fieldStatus: null\r\n    }\r\n    \r\n  }\r\n  \r\n  componentWillMount() {\r\n    const {statusEditTask,fieldName, fieldStatus, statusUpdateTask, onHandleChange, onAdd, onUpdate,  onReset, hideEditTask} = this.props;\r\n    \r\n  }\r\n  \r\n  checkDisplayEditTask = () => {\r\n    const {statusEditTask,fieldName, fieldStatus, statusUpdateTask, onHandleChange, onAdd, onUpdate,  onReset, hideEditTask} = this.props;\r\n    // console.log(checkStatus)\r\n    // console.log(fieldName);\r\n    // console.log(fieldStatus);\r\n    \r\n    \r\n    if (statusEditTask) {\r\n      \r\n      return (\r\n        <div className=\"panel panel-warning\">\r\n  <div className=\"panel-heading flex\">\r\n    <h3 \r\n      className=\"panel-title\">\r\n        {\r\n          statusUpdateTask ? \"Sửa công việc\" : \"Thêm Công Việc\"\r\n        }\r\n        </h3>\r\n    <span \r\n      className=\"icon-close\"\r\n      onClick={() => hideEditTask()}\r\n    >\r\n    <i \r\n      className=\"far fa-times-circle\"\r\n    ></i>\r\n\r\n    </span>\r\n  </div>\r\n  <div className=\"panel-body\">\r\n    <form>\r\n      <div className=\"form-group\">\r\n        <label>Tên công việc:</label>\r\n        <input \r\n          type=\"text\" \r\n          className=\"form-control\"\r\n          name=\"fieldName\"\r\n          value={fieldName}\r\n          onChange={(e) => onHandleChange(e)\r\n          \r\n          }\r\n          />\r\n      </div>\r\n     \r\n      <label>Trạng Thái :</label>\r\n      <div className=\"form-check\">\r\n        <label className=\"form-check-label\">\r\n          <input \r\n          className=\"form-check-input\" \r\n          name=\"fieldStatus\" \r\n          value=\"notComplete\"\r\n          type=\"radio\" \r\n          aria-label=\"Text for screen reader\"\r\n          onChange={(e) => onHandleChange(e)}\r\n          checked={statusUpdateTask ? !fieldStatus : fieldStatus === \"notComplete\"}\r\n          />\r\n          <span>\r\n            Chưa hoàn thành\r\n          </span>\r\n        </label>\r\n        <label className=\"form-check-label\">\r\n          <input \r\n          className=\"form-check-input\" \r\n          name=\"fieldStatus\" \r\n          value=\"complete\"\r\n          type=\"radio\" \r\n          aria-label=\"Text for screen reader\"\r\n          onChange={(e) => onHandleChange(e)} \r\n          checked={statusUpdateTask ? fieldStatus : fieldStatus === \"complete\"}\r\n          \r\n          />\r\n          <span>\r\n            Hoàn thành\r\n          </span>\r\n        </label>\r\n      </div>\r\n      <br />\r\n      <div className=\"text-center\">\r\n        {\r\n          !statusUpdateTask ? ( <button \r\n            type=\"submit\" \r\n            className=\"btn btn-warning\"\r\n            onClick={(e) => onAdd(e)}\r\n            >Thêm</button>\r\n            ) : (<button \r\n              type=\"submit\" \r\n              className=\"btn  btn-info\"\r\n              onClick={(e) => onUpdate(e)}\r\n              >Sửa</button>)\r\n        }\r\n       \r\n        <button \r\n        type=\"reset\" \r\n        className=\"btn btn-danger\"\r\n        onClick={(e) => onReset(e)}\r\n        >Reset</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n      )\r\n    }\r\n    \r\n  }\r\nrender() {\r\n  \r\nreturn (\r\n  <div>\r\n    {this.checkDisplayEditTask()}\r\n  </div>\r\n);\r\n}\r\n}\r\n\r\nexport default EditTask;","import React, { Component } from 'react';\r\n\r\nclass OptionsTask extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n    }\r\n   \r\n    render() {\r\n        const {displayEditTask, showEditTask} = this.props;\r\n        return (\r\n            <div>\r\n                <button \r\n                    type=\"button\" \r\n                    className=\"btn btn-primary\"\r\n                    onClick={() => displayEditTask()}\r\n                    // onClick={() => showEditTask()}\r\n                    >\r\n                    <span className=\"fa fa-plus mr-5\" />Thêm Công Việc\r\n        </button>\r\n                <div className=\"row mt-15\">\r\n                    <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n                        <div className=\"input-group\">\r\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Nhập từ khóa...\" />\r\n                            <span className=\"input-group-btn\">\r\n                                <button className=\"btn btn-primary\" type=\"button\">\r\n                                    <span className=\"fa fa-search mr-5\" />Tìm\r\n                </button>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OptionsTask;","import React, { Component } from 'react';\r\n\r\nclass ListItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n  }\r\n  \r\n  \r\n    render() {\r\n      // console.log(this.props.database); \r\n      const {listItem, stt, onDelete, onChangeStatus, showUpdateTask} = this.props;\r\n      const {name, status, id} = listItem;\r\n        return (\r\n            <tr>\r\n                  <td>\r\n                    {\r\n                      stt\r\n                    }\r\n                  </td>\r\n                  <td>\r\n                    {name}\r\n                  </td>\r\n                  <td className=\"text-center\">\r\n                    <span \r\n                      className={status ? \"label label-success\" : \"label label-danger\"}\r\n                      onClick={() => onChangeStatus(id)}\r\n                      >\r\n                      {                     \r\n                        status ? \"Đã hoàn thành\" : \"Chưa hoàn thành\"                   \r\n                      }\r\n                    </span>\r\n                  </td>\r\n                  <td className=\"text-center\">\r\n                    <button \r\n                    type=\"button\" \r\n                    className=\"btn btn-warning\"\r\n                    onClick={() => showUpdateTask(id)}\r\n                    \r\n                    >\r\n                      <span \r\n                        className=\"fa fa-pencil mr-5\" \r\n                      />Sửa\r\n                    </button>\r\n                    &nbsp;\r\n                    <button \r\n                    type=\"button\" \r\n                    className=\"btn btn-danger\"\r\n                    onClick={() => onDelete(id)}\r\n                    >\r\n                      <span className=\"fa fa-trash mr-5\" />Xóa\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListItem;","import React, { Component } from 'react';\r\nimport ListItem from './ListItem';\r\n\r\nclass TableData extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      database: null,\r\n      fieldName: \"\",\r\n      fieldStatus: -1,\r\n      sort: {\r\n        sortName: \"\",\r\n        sortStatus: -1\r\n      }\r\n    }\r\n  }\r\n  updateDataBase = () => {\r\n    const {database} = this.props;\r\n    if(database) {\r\n      this.setState({\r\n        database\r\n      })\r\n    }\r\n  }\r\n  onChange = (e) => {\r\n    const {fieldName, fieldStatus} = this.state;\r\n    const {filterItem} = this.props;\r\n    const target = e.target;\r\n    const name = target.name;\r\n    const value = target.value;\r\n    filterItem(\r\n      name === \"fieldName\" ? value : fieldName,\r\n      name ===\"fieldStatus\" ? value : fieldStatus\r\n    )\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n    // console.log(this.state)\r\n  }\r\n\r\n  \r\n  renderListItem = () => {\r\n    const {database, onDelete, onChangeStatus, showUpdateTask} = this.props;\r\n    if(database) {\r\n      // console.log(database);\r\n      return database.map((item, index) => {\r\n        return (\r\n          <ListItem \r\n          key={index} \r\n          stt={index + 1}  \r\n          listItem={item}\r\n          onDelete={(id) => onDelete(id)}\r\n          onChangeStatus={(id) => onChangeStatus(id)}\r\n          showUpdateTask={(id) => showUpdateTask(id)}\r\n          ></ListItem>\r\n        )\r\n      })\r\n\r\n    }\r\n  }\r\n\r\n    render() {\r\n      // console.log(this.props.database);\r\n      // console.log(this.state.database);\r\n      // const {db} = this.props;\r\n      // console.log(db);\r\n      const {onHandleSort, sort} = this.props;\r\n      // console.log(sort);\r\n  \r\n        return (\r\n            <table className=\"table table-bordered table-hover\">\r\n              <thead>\r\n                <tr>\r\n                  <th \r\n                    className=\"text-center table-header\"\r\n                    onClick={(e) => onHandleSort(e, \"sttSort\", -1)}\r\n                    >\r\n                    STT\r\n                    <span \r\n                      className=\"sort-box\"\r\n                      \r\n                    ></span>\r\n                  </th>\r\n                  <th \r\n                    className=\"text-center table-header\"\r\n                    onClick={(e) => onHandleSort(e, \"nameSort\",  -1)}\r\n                    >\r\n                    Tên công việc\r\n                    <span \r\n                      className=\"sort-box\"\r\n                      style={(sort[\"nameSort\"].status === -1) ? {display:\"inline-block\"} : (sort[\"nameSort\"].status === 0) ? {display: \"none\"}: {display: \"none\"}}\r\n                    >\r\n                      <i className=\"fas fa-sort\"></i>\r\n                      \r\n                    </span>\r\n                    <span \r\n                      className=\"sort-box\"\r\n                      style={(sort[\"nameSort\"].status === 0) ? {display:\"inline-block\"} : (sort[\"nameSort\"].status === -1) ? {display: \"none\"}: {display: \"none\"}}\r\n                      >\r\n                         <i className=\"fas fa-sort-amount-down\"></i>\r\n\r\n                      \r\n                    </span>\r\n                    <span \r\n                    \r\n                      className=\"sort-box\"\r\n                      style={(sort[\"nameSort\"].status === 1) ? {display:\"inline-block\"} : (sort[\"nameSort\"].status === 0) ? {display: \"none\"}: {display: \"none\"}}\r\n                      \r\n                      >\r\n                      <i className=\"fas fa-sort-amount-up\"></i>\r\n                      \r\n                    </span>\r\n                    </th>\r\n                  <th \r\n                    className=\"text-center table-header\"\r\n                    onClick={(e) => onHandleSort(e, \"statusSort\", -1)}\r\n                    >\r\n                    Trạng Thái\r\n                    <span \r\n                      className=\"sort-box\"\r\n                      style={(sort[\"statusSort\"].status === -1) ? {display:\"inline-block\"} : (sort[\"statusSort\"].status === 0) ? {display: \"none\"}: {display: \"none\"}}\r\n                    >\r\n                      <i className=\"fas fa-sort\"></i>\r\n                      \r\n                    </span>\r\n                    <span \r\n                      className=\"sort-box\"\r\n                      style={(sort[\"statusSort\"].status === 0) ? {display:\"inline-block\"} : (sort[\"statusSort\"].status === -1) ? {display: \"none\"}: {display: \"none\"}}\r\n                      >\r\n                        <i className=\"far fa-check-circle\"></i>\r\n                    </span>\r\n                    <span \r\n                    \r\n                      className=\"sort-box\"\r\n                      style={(sort[\"statusSort\"].status === 1) ? {display:\"inline-block\"} : (sort[\"statusSort\"].status === 0) ? {display: \"none\"}: {display: \"none\"}}\r\n                      \r\n                      >\r\n                      <i className=\"far fa-times-circle\"></i>\r\n                    </span>\r\n                    </th>\r\n                  <th \r\n                    className=\"text-center table-header\"\r\n                   \r\n                    >\r\n                    Hành Động</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td>\r\n                   \r\n                  </td>\r\n                  <td>\r\n                    <input \r\n                      type=\"text\" \r\n                      className=\"form-control\"\r\n                      name=\"fieldName\"\r\n                      onChange={this.onChange}\r\n                      placeholder=\"Tìm kiếm nhanh....\"\r\n                      />\r\n                  </td>\r\n                  <td>\r\n                    <select \r\n                      className=\"form-control\"\r\n                      name=\"fieldStatus\"\r\n                      onChange={this.onChange}\r\n                     >\r\n                      <option value={-1}>Tất Cả</option>\r\n                      <option value={0}>Đã hoàn thành</option>\r\n                      <option value={1}>Chưa hoàn thành</option>\r\n                    </select>\r\n                  </td>\r\n                  <td />\r\n                </tr>\r\n                {\r\n                  this.renderListItem()\r\n                }\r\n              \r\n              </tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TableData;"," const linkAPI = \"https://5f87ffdd49ccbb0016177dd4.mockapi.io/ListItem\";\r\n export default linkAPI;","\nimport EditTask from './Components/EditTask';\nimport OptionsTask from \"./Components/OptionsTask\";\nimport TableData from './Components/TableData';\nimport React, { Component } from 'react';\nimport linkAPI from \"./Components/Constants\";\nimport db from \"./Database/db.json\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataInit: null,\n      data: null,\n      statusEditTask: false,\n      id: null,\n      fieldName: \"\",\n      fieldStatus: \"notComplete\",\n      statusUpdateTask: false,\n      valueAdd: null,\n      filterValue: {\n        name: \"\",\n        status: -1\n      },\n      sort: {\n        sortBy: \"\",\n        sttSort: {\n          status: -1\n        },\n        nameSort: {\n          status: -1\n        },\n        statusSort: {\n          status: -1\n        },\n      },\n\n    }\n\n  }\n  componentWillMount() {\n    fetch(linkAPI)\n      .then(response => response.json())\n      .then(data => {\n        \n        \n        this.setState({\n          data: data,\n          dataInit: data\n        })\n      })\n       \n  }\n  \n  \n  \n  displayEditTask = () => {\n    // status: true\n    \n    const {statusEditTask, statusUpdateTask} = this.state;\n    if(statusUpdateTask) {\n      this.setState({\n        statusEditTask: true,\n        statusUpdateTask: false,\n        fieldName:\"\",\n        fieldStatus: \"notComplete\"\n      });\n    }\n    else {\n      this.setState({\n        statusEditTask: true,\n        statusUpdateTask: false\n      })\n    }\n  }\n  \n  onHandleChange = (e) => {\n    const {statusUpdateTask} = this.state;\n    const target = e.target;\n    const name = target.name;\n    const value = target.value;\n    // console.log(e.target.name);\n    this.setState({\n      [name]: value\n    })\n    // console.log(this.state);\n    // this.setState({statusUpdateTask: false});\n  }\n   generateId = () => {\n    return '_' + Math.random().toString(36).substr(2, 9);\n  }\n \n  onAdd = (e) => {\n    e.preventDefault();\n    const {fieldName, fieldStatus, data} = this.state;\n    if (!fieldName.trim()) {\n      alert(\"Bạn phải nhập tên công việc\")\n    }\n    else {\n      const valueInput = {\n        name: fieldName, \n        status: fieldStatus === \"complete\" ? true : false\n      };\n      const options = {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n          // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: JSON.stringify(valueInput)\n      }\n      // data.push(valueInput);\n      //     this.setState({data})\n      fetch(linkAPI, options)\n        .then(response => response.json())\n        .then(result => {\n          data.push(result)\n          this.setState({data: data})\n        })\n        .then(() => {\n          this.setState({\n            fieldName:\"\",\n            fieldStatus: \"notComplete\"\n          })\n\n        })\n        .catch(error => error)\n    }\n  }\n  onUpdate = (e) => {\n    \n    const {data, valueAdd, id, fieldName, fieldStatus} = this.state;\n    if(fieldName) {\n      const value = {\n        name: fieldName,\n        status: fieldStatus\n      }\n    \n      const newUpdateData = data.map((item, index) => {\n        if(item.id === id) {\n          item.name = fieldName;\n          item.status = fieldStatus;\n        }\n        return item;\n      })\n      this.setState({\n        data: newUpdateData\n      })\n      \n      e.preventDefault();\n      console.log(valueAdd)\n      const options = {\n        method: \"PUT\",\n        headers: {\n          'Content-Type': 'application/json'\n          // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: JSON.stringify(value)\n      }\n      fetch(linkAPI + \"/\" + id, options)\n        .then(response => response.json())\n        .then(result => {\n          console.log(result)\n        })\n        .catch(error => alert(\"Update tên công việc không thành công!!!\"))\n    }\n    else {\n      alert(\"Vui lòng nhập công việc!!\")\n    }\n    \n  }\n  onReset = (e) => {\n    // const {fieldName, fieldStatus} = this.state;\n\n    e.preventDefault();\n    this.setState({\n      fieldName: \"\",\n      fieldStatus: \"\"\n    })\n  }\n onDelete = (id) => {\n  // console.log(id);\n  const {data, statusEditTask} = this.state;\n\n\n  const options = {\n    method: \"DELETE\",\n    headers: {\n      'Content-Type': 'application/json'\n      // 'Content-Type': 'application/x-www-form-urlencoded',\n    }\n  }\n  fetch(linkAPI + \"/\" + id, options)\n    .then(response => response.json())\n    .then(result => {\n      console.log(result)\n      // const dataFilter = data.filter((item, index) => {\n      //   return item.id !== result.id\n      // })\n      // this.setState({data: dataFilter})\n    })\n    .catch(error => error);\n    const dataFilter = data.filter((item, index) => {\n        return item.id !== id\n      })\n      this.setState({data: dataFilter})\n      this.setState({statusEditTask: false}) \n }\n  onChangeStatus = (id) => {\n    const {fieldStatus, data} = this.state;\n    \n    const changeStatus = data.map((item, index) => {\n      if (item.id === id) {\n        item.status = !item.status\n      }\n      return item\n    })\n    this.setState({\n      data: changeStatus\n    })\n    const dataFilter = data.filter((item, index) => {\n      return item.id === id;\n    }).map(item => {\n      item.status = item.status;\n      return item;\n    })\n    const options = {\n      method: \"PUT\",\n      headers: {\n        'Content-Type': 'application/json'\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: JSON.stringify(dataFilter[0])\n    }\n    console.log(dataFilter)\n    fetch(linkAPI + \"/\" + id, options)\n      .then(response => response.json())\n      .then(result => result)\n      .catch(error => alert(\"Thay đổi trạng thái không thành công!!!\"))\n    // console.log(changeStatus)\n  }\n  showUpdateTask = (id) => {\n    const {statusUpdateTask, statusEditTask, data, fieldName, fieldStatus} = this.state;\n    const dataFilter = data.filter((item, index) => {\n      return item.id === id\n    })\n    this.showEditTask();\n    this.setState({\n      fieldName: dataFilter[0].name,\n      fieldStatus: dataFilter[0].status,\n      statusUpdateTask: true,\n      valueAdd: dataFilter[0],\n      id: id\n    })\n    // console.log(dataFilter)\n    // console.log(this.state)\n  }\n  showEditTask = () => {\n    const {statusUpdateTask} = this.state;\n    this.setState({\n      statusEditTask: true,\n      statusUpdateTask: false\n    })\n  }\n  hideEditTask = () => {\n    const {statusUpdateTask, fieldName, fieldStatus} = this.state;\n    this.setState({\n      fieldName: \"\",\n      fieldStatus: \"notComplete\",\n      statusEditTask: false\n    })\n  }\n  filterItem = (fieldName, fieldStatus) => {\n    const {data} = this.state;\n    \n    this.setState({\n      filterValue: {\n        name: fieldName,\n        status: parseInt(fieldStatus)\n      }\n    })\n    \n  }\n  onHandleSort = (e, nameSort, statusSort) => {\n    let {sort} = this.state;\n      \n      this.setState({\n        sort: {\n          ...sort,\n          [nameSort] : {\n            status: sort[nameSort].status < 1 ? sort[nameSort].status + 1: -1\n          },\n          sortBy: nameSort\n        }\n\n      })\n     \n      \n  }\n\n    \n\n  render() {\n    let {data,dataInit, statusEditTask, fieldName, fieldStatus, statusUpdateTask , statusSort, nameSort, filterValue, sort} = this.state;\n    // console.log(statusEditTask)\n    // console.log(fieldName);\n    // console.log(fieldStatus);\n    // console.log(typeof filterValue.status);\n    // console.log(this.generateId())\n    // console.log(sort);\n    \n    if(data) {\n    // console.log(data);\n\n      if(filterValue) {\n        \n        if(filterValue.name) {\n          data = data.filter((item) => {\n           return item.name.toUpperCase().indexOf(filterValue.name.toUpperCase().trim()) !== -1;\n         })\n      }\n      // console.log(filterValue);\n      \n        data = data.filter(item => {\n          if(filterValue.status === -1) {\n            return item;\n          }\n           else {\n             return item.status === (filterValue.status === 0 ? true: false);\n\n           }     \n          \n        })\n        // console.log(dataFilter);\n        // console.log(data);\n        if (sort) {\n         console.log(filterValue);\n         \n         if (sort.sortBy === \"\") {\n           data = dataInit\n         }\n         else if (sort.sortBy === \"nameSort\" ){\n           // data = dataInit\n           if(sort[\"nameSort\"].status === -1) {\n             data = dataInit\n           }\n           else if(sort[\"nameSort\"].status === 0) {\n             \n             data = data.sort((a, b) =>{\n               if(a.name.toUpperCase() < b.name.toUpperCase()) return -1             \n             })\n           }\n           else if(sort[\"nameSort\"].status === 1) {\n             \n             data = data.sort((a, b) =>{\n               if(a.name.toUpperCase() > b.name.toUpperCase()) return -1\n             })\n           }\n         }\n          else if (sort.sortBy === \"statusSort\" ) {\n           if(sort[\"statusSort\"].status === -1) {\n             data = dataInit\n           }\n           else if(sort[\"statusSort\"].status === 0) {\n             \n             data = data.sort((a, b) =>{\n               if(a.status || b.status) return -1             \n             })\n           }\n           else if(sort[\"statusSort\"].status === 1) {\n             \n             data = data.sort((a, b) =>{\n               if(a.status && b.status) return -1\n             })\n           }\n          }\n       }\n      }        \n    }\n      \n    \n\n    \n    \n\n\n    return (\n      <div className=\"App\">\n  <div className=\"container\">\n    <div className=\"text-center\">\n      <h1>Quản Lý Công Việc</h1>\n      \n      <hr />\n    </div>\n    <div className=\"row\">\n      <div className=\"col-xs-4 col-sm-4 col-md-4 col-lg-4\">\n        <EditTask \n          statusEditTask={statusEditTask}\n          onHandleChange={(e) => this.onHandleChange(e)}\n          fieldName={fieldName}\n          fieldStatus={fieldStatus}\n          onAdd={(e) => this.onAdd(e)}\n          onUpdate={(e) => this.onUpdate(e)}\n          onReset={(e) => this.onReset(e)}\n          displayEditTask={() => this.displayEditTask()}\n          hideEditTask={() => this.hideEditTask()}\n          statusUpdateTask={statusUpdateTask}\n          \n        />\n      </div>\n      <div className={statusEditTask ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\" : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\"}>\n        <OptionsTask\n          displayEditTask={() => this.displayEditTask()}\n          // showEditTask={() => this.showEditTask()}\n        ></OptionsTask>\n        <div className=\"row mt-15\">\n          <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n            <TableData \n              database={data}\n              onDelete={(id) => this.onDelete(id)}\n              onChangeStatus={(id) => this.onChangeStatus(id)}\n              showUpdateTask={(id) => this.showUpdateTask(id)}\n              filterItem={(fieldName, fieldStatus) => this.filterItem(fieldName, fieldStatus)}\n              onHandleSort={(e, nameSort, statusSort) => this.onHandleSort(e, nameSort, statusSort)}\n              sort={sort}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n    );\n  }\n}\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}