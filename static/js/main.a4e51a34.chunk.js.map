{"version":3,"sources":["Components/EditTask.js","Components/OptionsTask.js","Components/ListItem.js","Components/TableData.js","Components/Constants.js","App.js","serviceWorker.js","index.js"],"names":["EditTask","props","checkDisplayEditTask","statusEditTask","fieldName","fieldStatus","statusUpdateTask","onHandleChange","onAdd","onUpdate","onReset","hideEditTask","className","onClick","type","name","value","onChange","e","aria-label","checked","state","this","Component","OptionsTask","displayEditTask","showEditTask","placeholder","id","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","role","ListItem","listItem","stt","onDelete","onChangeStatus","showUpdateTask","status","TableData","updateDataBase","database","setState","renderListItem","map","item","index","key","linkAPI","App","target","generateId","Math","random","toString","substr","preventDefault","data","trim","valueInput","options","method","headers","body","JSON","stringify","fetch","then","response","json","result","console","log","push","catch","error","alert","valueAdd","newUpdateData","dataFilter","filter","changeStatus","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a4e51a34.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass EditTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fieldName: '',\r\n      fieldStatus: null\r\n    }\r\n    \r\n  }\r\n  \r\n  componentWillMount() {\r\n    const {statusEditTask,fieldName, fieldStatus, statusUpdateTask, onHandleChange, onAdd, onUpdate,  onReset, hideEditTask} = this.props;\r\n    \r\n  }\r\n  \r\n  checkDisplayEditTask = () => {\r\n    const {statusEditTask,fieldName, fieldStatus, statusUpdateTask, onHandleChange, onAdd, onUpdate,  onReset, hideEditTask} = this.props;\r\n    // console.log(checkStatus)\r\n    // console.log(fieldName);\r\n    // console.log(fieldStatus);\r\n    \r\n    \r\n    if (statusEditTask) {\r\n      \r\n      return (\r\n        <div className=\"panel panel-warning\">\r\n  <div className=\"panel-heading flex\">\r\n    <h3 \r\n      className=\"panel-title\">\r\n        {\r\n          statusUpdateTask ? \"Sửa công việc\" : \"Thêm Công Việc\"\r\n        }\r\n        </h3>\r\n    <span \r\n      className=\"icon-close\"\r\n      onClick={() => hideEditTask()}\r\n    >\r\n    <i \r\n      className=\"far fa-times-circle\"\r\n    ></i>\r\n\r\n    </span>\r\n  </div>\r\n  <div className=\"panel-body\">\r\n    <form>\r\n      <div className=\"form-group\">\r\n        <label>Tên công việc:</label>\r\n        <input \r\n          type=\"text\" \r\n          className=\"form-control\"\r\n          name=\"fieldName\"\r\n          value={fieldName}\r\n          onChange={(e) => onHandleChange(e)\r\n          \r\n          }\r\n          />\r\n      </div>\r\n     \r\n      <label>Trạng Thái :</label>\r\n      <div className=\"form-check\">\r\n        <label className=\"form-check-label\">\r\n          <input \r\n          className=\"form-check-input\" \r\n          name=\"fieldStatus\" \r\n          value=\"notComplete\"\r\n          type=\"radio\" \r\n          aria-label=\"Text for screen reader\"\r\n          onChange={(e) => onHandleChange(e)}\r\n          checked={statusUpdateTask ? !fieldStatus : fieldStatus === \"notComplete\"}\r\n          />\r\n          <span>\r\n            Chưa hoàn thành\r\n          </span>\r\n        </label>\r\n        <label className=\"form-check-label\">\r\n          <input \r\n          className=\"form-check-input\" \r\n          name=\"fieldStatus\" \r\n          value=\"complete\"\r\n          type=\"radio\" \r\n          aria-label=\"Text for screen reader\"\r\n          onChange={(e) => onHandleChange(e)} \r\n          checked={statusUpdateTask ? fieldStatus : fieldStatus === \"complete\"}\r\n          \r\n          />\r\n          <span>\r\n            Hoàn thành\r\n          </span>\r\n        </label>\r\n      </div>\r\n      <br />\r\n      <div className=\"text-center\">\r\n        {\r\n          !statusUpdateTask ? ( <button \r\n            type=\"submit\" \r\n            className=\"btn btn-warning\"\r\n            onClick={(e) => onAdd(e)}\r\n            >Thêm</button>\r\n            ) : (<button \r\n              type=\"submit\" \r\n              className=\"btn  btn-info\"\r\n              onClick={(e) => onUpdate(e)}\r\n              >Sửa</button>)\r\n        }\r\n       \r\n        <button \r\n        type=\"reset\" \r\n        className=\"btn btn-danger\"\r\n        onClick={(e) => onReset(e)}\r\n        >Reset</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n      )\r\n    }\r\n    \r\n  }\r\nrender() {\r\n  \r\nreturn (\r\n  <div>\r\n    {this.checkDisplayEditTask()}\r\n  </div>\r\n);\r\n}\r\n}\r\n\r\nexport default EditTask;","import React, { Component } from 'react';\r\n\r\nclass OptionsTask extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n    }\r\n    \r\n    \r\n    render() {\r\n        const {displayEditTask, showEditTask} = this.props;\r\n        return (\r\n            <div>\r\n                <button \r\n                    type=\"button\" \r\n                    className=\"btn btn-primary\"\r\n                    onClick={() => displayEditTask()}\r\n                    // onClick={() => showEditTask()}\r\n                    >\r\n                    <span className=\"fa fa-plus mr-5\" />Thêm Công Việc\r\n        </button>\r\n                <div className=\"row mt-15\">\r\n                    <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n                        <div className=\"input-group\">\r\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Nhập từ khóa...\" />\r\n                            <span className=\"input-group-btn\">\r\n                                <button className=\"btn btn-primary\" type=\"button\">\r\n                                    <span className=\"fa fa-search mr-5\" />Tìm\r\n                </button>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n                        <div className=\"dropdown\">\r\n                            <button className=\"btn btn-primary dropdown-toggle\" type=\"button\" id=\"dropdownMenu1\"\r\n                                data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\r\n                                Sắp Xếp <span className=\"fa fa-caret-square-o-down ml-5\" />\r\n                            </button>\r\n                            <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\r\n                                <li>\r\n                                    <a role=\"button\">\r\n                                        <span className=\"fa fa-sort-alpha-asc pr-5\">\r\n                                            Tên A-Z\r\n                    </span>\r\n                                    </a>\r\n                                </li>\r\n                                <li>\r\n                                    <a role=\"button\">\r\n                                        <span className=\"fa fa-sort-alpha-desc pr-5\">\r\n                                            Tên Z-A\r\n                    </span>\r\n                                    </a>\r\n                                </li>\r\n                                <li role=\"separator\" className=\"divider\" />\r\n                                <li><a role=\"button\">Trạng Thái Kích Hoạt</a></li>\r\n                                <li><a role=\"button\">Trạng Thái Ẩn</a></li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OptionsTask;","import React, { Component } from 'react';\r\n\r\nclass ListItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n  }\r\n  \r\n  \r\n    render() {\r\n      // console.log(this.props.database); \r\n      const {listItem, stt, onDelete, onChangeStatus, showUpdateTask} = this.props;\r\n      const {name, status, id} = listItem;\r\n        return (\r\n            <tr>\r\n                  <td>\r\n                    {\r\n                      stt\r\n                    }\r\n                  </td>\r\n                  <td>\r\n                    {name}\r\n                  </td>\r\n                  <td className=\"text-center\">\r\n                    <span \r\n                      className={status ? \"label label-success\" : \"label label-danger\"}\r\n                      onClick={() => onChangeStatus(id)}\r\n                      >\r\n                      {                     \r\n                        status ? \"Đã hoàn thành\" : \"Chưa hoàn thành\"                   \r\n                      }\r\n                    </span>\r\n                  </td>\r\n                  <td className=\"text-center\">\r\n                    <button \r\n                    type=\"button\" \r\n                    className=\"btn btn-warning\"\r\n                    onClick={() => showUpdateTask(id)}\r\n                    \r\n                    >\r\n                      <span \r\n                        className=\"fa fa-pencil mr-5\" \r\n                      />Sửa\r\n                    </button>\r\n                    &nbsp;\r\n                    <button \r\n                    type=\"button\" \r\n                    className=\"btn btn-danger\"\r\n                    onClick={() => onDelete(id)}\r\n                    >\r\n                      <span className=\"fa fa-trash mr-5\" />Xóa\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListItem;","import React, { Component } from 'react';\r\nimport ListItem from './ListItem';\r\n\r\nclass TableData extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      database: null\r\n    }\r\n  }\r\n  updateDataBase = () => {\r\n    const {database} = this.props;\r\n    if(database) {\r\n      this.setState({\r\n        database\r\n      })\r\n    }\r\n  }\r\n  \r\n  componentDidMount() {\r\n    const {database} = this.props;\r\n    if(database) {\r\n      this.setState({\r\n        database\r\n      })\r\n    }\r\n  }\r\n  \r\n  renderListItem = () => {\r\n    const {database, onDelete, onChangeStatus, showUpdateTask} = this.props;\r\n    // console.log(database);\r\n    if(database) {\r\n      return database.map((item, index) => {\r\n        return (\r\n          <ListItem \r\n          key={index} \r\n          stt={index + 1}  \r\n          listItem={item}\r\n          onDelete={(id) => onDelete(id)}\r\n          onChangeStatus={(id) => onChangeStatus(id)}\r\n          showUpdateTask={(id) => showUpdateTask(id)}\r\n          ></ListItem>\r\n        )\r\n      })\r\n\r\n    }\r\n  }\r\n  \r\n  \r\n  \r\n\r\n  \r\n    render() {\r\n      // console.log(this.props.database);\r\n      // console.log(this.state.database);\r\n      // const {db} = this.props;\r\n      // console.log(db);\r\n    \r\n      \r\n  \r\n        return (\r\n            <table className=\"table table-bordered table-hover\">\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"text-center\">STT</th>\r\n                  <th className=\"text-center\">Tên</th>\r\n                  <th className=\"text-center\">Trạng Thái</th>\r\n                  <th className=\"text-center\">Hành Động</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td />\r\n                  <td>\r\n                    <input type=\"text\" className=\"form-control\" />\r\n                  </td>\r\n                  <td>\r\n                    <select className=\"form-control\">\r\n                      <option value={-1}>Tất Cả</option>\r\n                      <option value={0}>Ẩn</option>\r\n                      <option value={1}>Kích Hoạt</option>\r\n                    </select>\r\n                  </td>\r\n                  <td />\r\n                </tr>\r\n                {\r\n                  this.renderListItem()\r\n                }\r\n              \r\n              </tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TableData;"," const linkAPI = \"https://5f87ffdd49ccbb0016177dd4.mockapi.io/ListItem\";\r\n export default linkAPI;","\nimport EditTask from './Components/EditTask';\nimport OptionsTask from \"./Components/OptionsTask\";\nimport TableData from './Components/TableData';\nimport React, { Component } from 'react';\nimport linkAPI from \"./Components/Constants\";\nimport db from \"./Database/db.json\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n      statusEditTask: false,\n      id: null,\n      fieldName: \"\",\n      fieldStatus: \"notComplete\",\n      statusUpdateTask: false,\n      valueAdd: null\n    }\n\n  }\n  componentWillMount() {\n    fetch(linkAPI)\n      .then(response => response.json())\n      .then(data => {\n        this.setState({data})\n      })\n       \n  }\n  \n  \n  \n  displayEditTask = () => {\n    // status: true\n    \n    const {statusEditTask, statusUpdateTask} = this.state;\n    if(statusUpdateTask) {\n      this.setState({\n        statusEditTask: true,\n        statusUpdateTask: false,\n        fieldName:\"\",\n        fieldStatus: \"notComplete\"\n      });\n    }\n    else {\n      this.setState({\n        statusEditTask: true,\n        statusUpdateTask: false\n      })\n    }\n  }\n  \n  onHandleChange = (e) => {\n    const {statusUpdateTask} = this.state;\n    const target = e.target;\n    const name = target.name;\n    const value = target.value;\n    // console.log(e.target.name);\n    this.setState({\n      [name]: value\n    })\n    // console.log(this.state);\n    // this.setState({statusUpdateTask: false});\n  }\n   generateId = () => {\n    return '_' + Math.random().toString(36).substr(2, 9);\n  }\n \n  onAdd = (e) => {\n    e.preventDefault();\n    const {fieldName, fieldStatus, data} = this.state;\n    if (!fieldName.trim()) {\n      alert(\"Bạn phải nhập tên công việc\")\n    }\n    else {\n      const valueInput = {\n        name: fieldName, \n        status: fieldStatus === \"complete\" ? true : false\n      };\n      const options = {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n          // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: JSON.stringify(valueInput)\n      }\n      // data.push(valueInput);\n      //     this.setState({data})\n      fetch(linkAPI, options)\n        .then(response => response.json())\n        .then(result => {\n          console.log(result.id)\n          data.push(result)\n          this.setState({data: data})\n        })\n        .then(() => {\n          this.setState({\n            fieldName:\"\",\n            fieldStatus: \"notComplete\"\n          })\n\n        })\n        .catch(error => error)\n    }\n  }\n  onUpdate = (e) => {\n    \n    const {data, valueAdd, id, fieldName, fieldStatus} = this.state;\n    if(fieldName) {\n      const value = {\n        name: fieldName,\n        status: fieldStatus\n      }\n    \n      const newUpdateData = data.map((item, index) => {\n        if(item.id === id) {\n          item.name = fieldName;\n          item.status = fieldStatus;\n        }\n        return item;\n      })\n      this.setState({\n        data: newUpdateData\n      })\n      \n      e.preventDefault();\n      console.log(valueAdd)\n      const options = {\n        method: \"PUT\",\n        headers: {\n          'Content-Type': 'application/json'\n          // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: JSON.stringify(value)\n      }\n      fetch(linkAPI + \"/\" + id, options)\n        .then(response => response.json())\n        .then(result => {\n          console.log(result)\n        })\n        .catch(error => alert(\"Update tên công việc không thành công!!!\"))\n    }\n    else {\n      alert(\"Vui lòng nhập công việc!!\")\n    }\n    \n  }\n  onReset = (e) => {\n    // const {fieldName, fieldStatus} = this.state;\n\n    e.preventDefault();\n    this.setState({\n      fieldName: \"\",\n      fieldStatus: \"\"\n    })\n  }\n onDelete = (id) => {\n  // console.log(id);\n  const {data, statusEditTask} = this.state;\n\n\n  const options = {\n    method: \"DELETE\",\n    headers: {\n      'Content-Type': 'application/json'\n      // 'Content-Type': 'application/x-www-form-urlencoded',\n    }\n  }\n  fetch(linkAPI + \"/\" + id, options)\n    .then(response => response.json())\n    .then(result => {\n      console.log(result)\n      // const dataFilter = data.filter((item, index) => {\n      //   return item.id !== result.id\n      // })\n      // this.setState({data: dataFilter})\n    })\n    .catch(error => error);\n    const dataFilter = data.filter((item, index) => {\n        return item.id !== id\n      })\n      this.setState({data: dataFilter})\n      this.setState({statusEditTask: false}) \n }\n  onChangeStatus = (id) => {\n    const {fieldStatus, data} = this.state;\n    \n    const changeStatus = data.map((item, index) => {\n      if (item.id === id) {\n        item.status = !item.status\n      }\n      return item\n    })\n    this.setState({\n      data: changeStatus\n    })\n    const dataFilter = data.filter((item, index) => {\n      return item.id === id;\n    }).map(item => {\n      item.status = item.status;\n      return item;\n    })\n    const options = {\n      method: \"PUT\",\n      headers: {\n        'Content-Type': 'application/json'\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: JSON.stringify(dataFilter[0])\n    }\n    console.log(dataFilter)\n    fetch(linkAPI + \"/\" + id, options)\n      .then(response => response.json())\n      .then(result => result)\n      .catch(error => alert(\"Thay đổi trạng thái không thành công!!!\"))\n    // console.log(changeStatus)\n  }\n  showUpdateTask = (id) => {\n    const {statusUpdateTask, statusEditTask, data, fieldName, fieldStatus} = this.state;\n    const dataFilter = data.filter((item, index) => {\n      return item.id === id\n    })\n    this.showEditTask();\n    this.setState({\n      fieldName: dataFilter[0].name,\n      fieldStatus: dataFilter[0].status,\n      statusUpdateTask: true,\n      valueAdd: dataFilter[0],\n      id: id\n    })\n    // console.log(dataFilter)\n    // console.log(this.state)\n  }\n  showEditTask = () => {\n    const {statusUpdateTask} = this.state;\n    this.setState({\n      statusEditTask: true,\n      statusUpdateTask: false\n    })\n  }\n  hideEditTask = () => {\n    const {statusUpdateTask, fieldName, fieldStatus} = this.state;\n    this.setState({\n      fieldName: \"\",\n      fieldStatus: \"notComplete\",\n      statusEditTask: false\n    })\n  }\n\n  render() {\n    const {data, statusEditTask, fieldName, fieldStatus, statusUpdateTask} = this.state;\n    // console.log(data);\n    // console.log(statusEditTask)\n    // console.log(fieldName);\n    // console.log(fieldStatus);\n    // console.log(this.generateId())\n    \n\n\n    return (\n      <div className=\"App\">\n  <div className=\"container\">\n    <div className=\"text-center\">\n      <h1>Quản Lý Công Việc</h1>\n      \n      <hr />\n    </div>\n    <div className=\"row\">\n      <div className=\"col-xs-4 col-sm-4 col-md-4 col-lg-4\">\n        <EditTask \n          statusEditTask={statusEditTask}\n          onHandleChange={(e) => this.onHandleChange(e)}\n          fieldName={fieldName}\n          fieldStatus={fieldStatus}\n          onAdd={(e) => this.onAdd(e)}\n          onUpdate={(e) => this.onUpdate(e)}\n          onReset={(e) => this.onReset(e)}\n          displayEditTask={() => this.displayEditTask()}\n          hideEditTask={() => this.hideEditTask()}\n          statusUpdateTask={statusUpdateTask}\n          \n        />\n      </div>\n      <div className={statusEditTask ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\" : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\"}>\n        <OptionsTask\n          displayEditTask={() => this.displayEditTask()}\n          // showEditTask={() => this.showEditTask()}\n        ></OptionsTask>\n        <div className=\"row mt-15\">\n          <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n            <TableData \n              database={data}\n              onDelete={(id) => this.onDelete(id)}\n              onChangeStatus={(id) => this.onChangeStatus(id)}\n              showUpdateTask={(id) => this.showUpdateTask(id)}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}